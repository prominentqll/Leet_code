***************************************************************************
题目描述：
合并 k 个排序链表，返回合并后的排序链表。请分析和描述算法的复杂度。

示例:

输入:
[
  1->4->5,
  1->3->4,
  2->6
]
输出: 1->1->2->3->4->4->5->6

解题思路：
自定义ListNode的比较函数，使得ListNode按照val的大小排序
priority_queue在push时排序。
**************************************************************************
代码实现：
class Solution {
public:
    struct cmp
    {
        bool operator()(ListNode *l1,ListNode*l2)
        {
            return l1->val>l2->val;
        }
        
    };
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        int size=lists.size();
        priority_queue<ListNode *,vector<ListNode *>,cmp>  que;
        
        for(int i=0;i<size;++i)
        {
            if(lists[i]!=nullptr)
            {
                que.push(lists[i]);
            }
        }
        
        ListNode *dummy=new ListNode(-1);
        ListNode *tmp=dummy;
        while(!que.empty())
        {
            ListNode * top=que.top();
            que.pop();
            tmp->next=new ListNode (top->val);
            tmp=tmp->next;
            if(top->next!=nullptr)
            {
                que.push(top->next);
            }
        }
        return dummy->next;
        
    }
};