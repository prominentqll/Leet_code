***************************************************************
问题描述：
给定一个单链表 L：L0→L1→…→Ln-1→Ln ，
将其重新排列后变为： L0→Ln→L1→Ln-1→L2→Ln-2→…

你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。

示例 1:

给定链表 1->2->3->4, 重新排列为 1->4->2->3.
示例 2:

给定链表 1->2->3->4->5, 重新排列为 1->5->2->4->3.
解题思路：
- 用vector容器将结点存储下来
- 用两个指针，分别将容器中的结点根据题目要求进行连接
******************************************************************
代码实现：
class Solution {
public:
    void reorderList(ListNode* head) {
        if(head==nullptr)
        {
            return ;
        }
        vector<ListNode *>  vec;
        ListNode *cur=head;
        while(cur!=nullptr)
        {
            vec.push_back(cur);
            cur=cur->next;
        }
        int len=vec.size();
        int begin=0;
        int end=len-1;
        while(begin<end)
        {
            vec[begin]->next=vec[end];
            vec[end--]->next=vec[++begin];
        }
        vec[begin]->next=nullptr;
    }
};