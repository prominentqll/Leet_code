******************************************************************
题目描述；
给定一个二叉树，检查它是否是镜像对称的。

例如，二叉树 [1,2,2,3,4,4,3] 是对称的。

    1
   / \
  2   2
 / \ / \
3  4 4  3
但是下面这个 [1,2,2,null,3,null,3] 则不是镜像对称的:

    1
   / \
  2   2
   \   \
   3    3

解题思路：

如果同时满足下面的条件，两个树互为镜像：
它们的两个根结点具有相同的值。
每个树的右子树都与另一个树的左子树镜像对称。
***************************************************************

代码实现：
 bool isSymmetric(TreeNode* root1,TreeNode *root2) 
    {
        if(root1==nullptr&&root2==nullptr)
        {
            return true;
        }
        if(root1==nullptr||root2==nullptr)
        {
            return false;
        }

        if(root1->val!=root2->val)//对应节点值不相等，不是镜像对称
        {
            return false;
        }
        return isSymmetric(root1->left,root2->right)
            && isSymmetric(root1->right,root2->left);
    } 
    
    bool isSymmetric(TreeNode* root)
    {
        return isSymmetric(root, root); 
    }   
