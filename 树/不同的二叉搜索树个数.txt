问题描述：
给定一个整数 n，求以 1 ... n 为节点组成的二叉搜索树有多少种？

解题思路：

*********************************************************************************************
就跟斐波那契数列一样，我们把n = 0 时赋为1，因为空树也算一种二叉搜索树，
那么n = 1时的情况可以看做是其左子树个数乘以右子树的个数，左右字数都是空树，所以1乘1还是1。
那么n = 2时，由于1和2都可以为跟，分别算出来，再把它们加起来即可。


n = 2的情况可由下面式子算出：

dp[2] =  dp[0] * dp[1]　　　(1为根的情况)  //当以1为根的时候，左边只有0个数，右边有1个2

　　　　+ dp[1] * dp[0]　　 (2为根的情况)  //当以2为根的时候，左边有1个1，右边只有0个数

n = 3 的计算方法：
dp[3] =  dp[0] * dp[2]　　　(1为根的情况)

　　　　+ dp[1] * dp[1]　　 (2为根的情况)

 　　　  + dp[2] * dp[0]　　 (3为根的情况)

************************************************************************************************



int numTrees(int n) {
        
        vector<int> dp(n+1,0);
        dp[0]=1;
        dp[1]=1;
        for(int i=2;i<=n;++i)
        {
            for(int j=0;j<i;++j)
            {
                
                dp[i]+=dp[j]*dp[i-j-1];                
            }
        }
        return dp[n];
    }