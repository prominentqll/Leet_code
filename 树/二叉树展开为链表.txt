***********************************************************************
题目描述：
给定一个二叉树，原地将它展开为链表。

例如，给定二叉树

    1
   / \
  2   5
 / \   \
3   4   6
将其展开为：

1
 \
  2
   \
    3
     \
      4
       \
        5
         \
          6

解题思路：
- 从根节点开始出发，先检测其左子结点是否存在
- 如存在则将根节点和其右子节点断开
- 将左子结点及其后面所有结构一起连到原右子节点的位置
- 把原右子节点连到原左子结点最后面的右子节点之后
**************************************************************************
代码实现：
 void flatten(TreeNode* root) 
    {
        if(root==nullptr)
        {
            return ;
        }
        TreeNode *cur=root;
        while(cur)
        {
            if(cur->left)
            {
                TreeNode *tmp=cur->left;
                while(tmp->right)
                {
                    tmp=tmp->right;
                }
                tmp->right=cur->right;//将左子结点及其后面所有结构一起连到原右子节点的位置
                cur->right=cur->left;//把原右子节点连到原左子结点最后面的右子节点之后
                cur->left=nullptr;
            }
            cur=cur->right;
        }    
    }