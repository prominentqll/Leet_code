**************************************************************************************************
题目描述：

老师想给孩子们分发糖果，有 N 个孩子站成了一条直线，老师会根据每个孩子的表现，预先给他们评分。

你需要按照以下要求，帮助老师给这些孩子分发糖果：

每个孩子至少分配到 1 个糖果。
相邻的孩子中，评分高的孩子必须获得更多的糖果。
那么这样下来，老师至少需要准备多少颗糖果呢？


解题思路：
1.首先保证每个孩子至少有一个糖果
2.从前向后遍历，如果后一个孩子的排名比前一个孩子高，则后一个孩子的糖果比前一个孩子的糖果多1
3.从后往前遍历,如果第i个孩子的排名高于第i+1个孩子，且第i个孩子的糖果比第i+1个孩子的糖果少
  则第i个孩子的糖果就为第i+1个孩子的糖果数+1
 **************************************************************************************************      
        


 int candy(vector<int>& ratings) 
    {
        int size = ratings.size();
        int sum=0;
        if(size==0)
        {
            return 0;
        }
        vector<int> res(size, 1);//保存对应孩子的糖果数
       
        for (int i = 1; i < size; ++i)
        {
            if (ratings[i] > ratings[i - 1])
            {
                res[i] = res[i - 1] + 1;
            }
        }

       
        sum=res[size-1];

        for (int i = size - 2; i >= 0; --i)
        {
            if (ratings[i] > ratings[i + 1] && res[i] <= res[i + 1])
            {
                res[i] = res[i + 1] + 1;
            }
            sum+=res[i];
        }

       // return accumulate(res.begin(), res.end(), 0);
        return sum;

    }