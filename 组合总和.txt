***************************************************************************
题目描述:
给定一个无重复元素的数组 candidates 和一个目标数 target ，找出 candidates 中所有可以使数字和为 target 的组合。

candidates 中的数字可以无限制重复被选取。

说明：
所有数字（包括 target）都是正整数。
解集不能包含重复的组合。 

示例 1:
输入: candidates = [2,3,6,7], target = 7,
所求解集为:
[
  [7],
  [2,2,3]
]

示例 2:
输入: candidates = [2,3,5], target = 8,
所求解集为:
[
  [2,2,2,2],
  [2,3,3],
  [3,5]
]
***********************************************************************************

代码实现：
void combination(int start, int target, vector<int> &vec, vector<vector<int>>&res, vector<int>& candidates)
{
	int n = candidates.size();
	for (int i = start; i < n; ++i)
	{
		if (target > 0)//还未组成target
		{
			vec.push_back(candidates[i]);
			combination(i, target - candidates[i], vec, res, candidates);
			vec.pop_back();
		}
		else if (target < 0)//无法组成target
		{
			return;
		}
		else//target==0,可以组成target
		{
			res.push_back(vec);
			return;
		}
	}
}
vector<vector<int>> combinationSum(vector<int>& candidates, int target)
{
	vector<int> vec;
	vector<vector<int>> res;
	combination(0, target, vec, res, candidates);
	return res;
}
